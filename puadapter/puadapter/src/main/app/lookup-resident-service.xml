<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesource.org/schema/mule/xml/2.2 http://www.mulesource.org/schema/mule/xml/2.2/mule-xml.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <flow name="LookupResident-flow" doc:name="LookupResident-flow">
        <http:inbound-endpoint exchange-pattern="request-response" address="${LOOKUPRESIDENT_INBOUND_URL}" doc:name="HTTP"/>
        
        <object-to-string-transformer doc:name="Object to String"/>
        
        <set-variable variableName="filterAvregOrsak" value="#[xpath('//urn1:Avregistreringsorsak') == null ? null : xpath('//urn1:Avregistreringsorsak').text]" doc:name="Variable"/>
        <set-variable variableName="filterSekretessmarkering" value="#[xpath('//urn1:Sekretessmarkering') == null ? null : xpath('//urn1:Sekretessmarkering/text()').text]" doc:name="Variable"/>
        <set-variable variableName="filterSenasteAndringFolkbokforing" value="#[xpath('//urn1:SenasteAndringFolkbokforing') == null ? null : xpath('//urn1:SenasteAndringFolkbokforing/text()').text]" doc:name="Variable"/>
        <set-variable variableName="filterHistoriskTidpunkt" value="#[xpath('//urn1:historiskTidpunkt') == null ? null : xpath('//urn1:historiskTidpunkt/text()').text]" doc:name="Variable"/>
        <expression-component doc:name="Create FilterParameters"><![CDATA[ flowVars['filterParams'] = new se.sll.rtjp.puadapter.lookupresident.filter.FilterParameters(flowVars['filterAvregOrsak'], flowVars['filterSekretessmarkering'], flowVars['filterSenasteAndringFolkbokforing'])]]></expression-component>
        
	    <expression-component doc:name="Fetch residents from SNOD"><![CDATA[ flowVars['responses'] = (new se.sll.rtjp.puadapter.lookupresident.fetcher.ThreadedSNODFetcher('${PU_SNOD_URL}', '${PU_SNOD_USERNAME}', '${PU_SNOD_PASSWORD}')).fetchAllFromRequest(xpath('//urn1:LookupResidentForFullProfile'))]]></expression-component>
	    
        <expression-component doc:name="Filter responselist"><![CDATA[ se.sll.rtjp.puadapter.lookupresident.filter.LookupSpecificationFilter.filterResidentList(flowVars['responses'], flowVars['filterParams']) ]]> </expression-component>
        
        <cxf:jaxws-service serviceClass="riv.population.residentmaster.lookupresidentforfullprofile.v1.rivtabp21.LookupResidentForFullProfileResponderInterface" validationEnabled="true"  doc:name="LookupResident-service" />
        <component class="se.sll.rtjp.puadapter.lookupresident.LookupResidentServiceImpl" doc:name="Java Service Impl"/>
        
        <response>
          		<expression-component doc:name="Add residents to payload"><![CDATA[ payload.getResident().addAll(flowVars['responses']); ]]></expression-component>
        </response>
        
		<catch-exception-strategy>
			<logger level="ERROR" message="Error procesor! #[exception]" />
			<custom-transformer class="se.sll.rtjp.puadapter.lookupresident.exception.SOAPFaultExceptionTransformer" />
		</catch-exception-strategy>
    </flow>
</mule>
