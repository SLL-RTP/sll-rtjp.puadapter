<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <spring:beans>
        <spring:bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
            <spring:property name="algorithm" value="PBEWithMD5AndDES"/>
            <spring:property name="passwordEnvName" value="SOITOOLKIT_ENCRYPTION_PASSWORD"/>
        </spring:bean>
        <spring:bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
            <spring:property name="config" ref="environmentVariablesConfiguration"/>
        </spring:bean>
        <spring:bean id="propertyConfigurer" class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
            <spring:constructor-arg ref="configurationEncryptor"/>
            <spring:property name="ignoreResourceNotFound" value="true"/>
            <spring:property name="locations">
                <spring:list>
                    <spring:value>classpath:puadapter-config.properties</spring:value>
                    <spring:value>classpath:puadapter-config-override.properties</spring:value>
                </spring:list>
            </spring:property>
        </spring:bean>
        <mule>  
            <!--  Allow integration tests to register dynamic listeners by specifying dynamic="true" -->  
            <notifications dynamic="true"> 
                <notification event="ENDPOINT-MESSAGE"/>  
                <notification event="COMPONENT-MESSAGE"/> 
            </notifications> 
        </mule>
    </spring:beans>
    <spring:beans>
        <spring:import resource="classpath:soitoolkit-mule-jms-connector-activemq-external.xml"/>
    </spring:beans>
    <!-- <spring:beans>
        <spring:import resource="classpath:teststub-services/*-teststub-service.xml"/>
    </spring:beans>
     <rest:config xmlns:rest="http://www.mulesoft.org/schema/mule/rest"></rest:config>-->
    <https:connector name="httpConnector" doc:name="HTTP\HTTPS">
        <https:tls-server path="${PU_SNOD_TRUSTSTORE}" storePassword="test"/>
    </https:connector>
    <custom-transformer returnClass="riv.population.residentmaster.v1.ResidentType" class="se.sll.rtjp.puadapter.lookupresident.transform.PKNODPLUSResidentTypeTransformer" name="SnodResponseToResidentTransformer" encoding="ISO-8859-1" doc:name="Java"/>
    <object-to-string-transformer name="objToStringTransformer" doc:name="Object to String" encoding="ISO-8859-1"/>
    <message-properties-transformer scope="outbound" name="setJsonContentType" doc:name="Message Properties">
        <add-message-property key="Content-Type" value="application/json;charset=UTF-8"/>
    </message-properties-transformer>
    <json:object-to-json-transformer name="jaxbToJson" doc:name="Object to JSON"/>
    <mulexml:namespace-manager xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" includeConfigNamespaces="true">  
        <mulexml:namespace prefix="urn1" uri="urn:riv:population:residentmaster:LookupResidentForFullProfileResponder:1"/> 
    </mulexml:namespace-manager>
    <mulexml:jaxb-context xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" name="jaxbContext" packageNames="org.soitoolkit.commons.logentry.schema.v1"></mulexml:jaxb-context>
    <custom-transformer class="org.soitoolkit.commons.mule.core.ObjectToStringTransformer" name="objToStr" doc:name="Java"/>
    <custom-transformer class="org.soitoolkit.commons.mule.log.correlationid.CreateCorrelationIdTransformer" name="createCorrId" doc:name="Java"/>
    <custom-transformer class="org.soitoolkit.commons.mule.log.correlationid.SaveCorrelationIdTransformer" name="saveCorrId" doc:name="Java"/>
    <custom-transformer class="org.soitoolkit.commons.mule.log.correlationid.RestoreCorrelationIdTransformer" name="restoreCorrId" doc:name="Java"/>
    <custom-transformer class="org.soitoolkit.commons.mule.soap.CreateSoapFaultIfExceptionTransformer" name="createSoapFaultIfException" doc:name="Java"/>
    <custom-transformer class="org.soitoolkit.commons.mule.mime.MimeToStringTransformer" name="mimeToStr" doc:name="Java"/>
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logMsgIn" doc:name="Java">
        <spring:property name="logType" value="msg-in"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logMsgOut" doc:name="Java">
        <spring:property name="logType" value="msg-out"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logReqIn" doc:name="Java">
        <spring:property name="logType" value="req-in"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logReqOut" doc:name="Java">
        <spring:property name="logType" value="req-out"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logRespIn" doc:name="Java">
        <spring:property name="logType" value="resp-in"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>
    <custom-transformer class="org.soitoolkit.commons.mule.log.LogTransformer" name="logRespOut" doc:name="Java">
        <spring:property name="logType" value="resp-out"/>
        <spring:property name="jaxbContext" ref="jaxbContext"/>
    </custom-transformer>
</mule>
